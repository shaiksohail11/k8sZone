
----------------------------------------KUBERNETES INSTALLATION-------------------------------------

       sudo -i
       curl -fsSL https://get.docker.com -o get-docker.sh
       sh get-docker.sh
       usermod -aG docker ubuntu
       wget https://storage.googleapis.com/golang/getgo/installer_linux
       chmod +x ./installer_linux
       ./installer_linux
       source ~/.bash_profile
       git clone https://github.com/Mirantis/cri-dockerd.git
        cd cri-dockerd
        mkdir bin
        go build -o bin/cri-dockerd
        mkdir -p /usr/local/bin
        install -o root -g root -m 0755 bin/cri-dockerd /usr/local/bin/cri-dockerd
        cp -a packaging/systemd/* /etc/systemd/system
        sed -i -e 's,/usr/bin/cri-dockerd,/usr/local/bin/cri-dockerd,' /etc/systemd/system/cri-docker.service
        systemctl daemon-reload
        systemctl enable cri-docker.service
        systemctl enable --now cri-docker.socket

################################# TO INSTALL KUBEADMIN ################################
         
        apt-get install -y apt-transport-https ca-certificates curl
        curl -fsSLo /etc/apt/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
        echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main' | sudo tee /etc/apt/sources.list.d/kubernetes.list
        apt-get update
        apt-get install -y kubelet=1.25.0-00 kubeadm=1.25.0-00 kubectl=1.25.0-00
        apt-mark hold kubelet kubeadm kubectl

############## TO CREATE A CLUSTER, LOGIN INTO THE MASTER NODE AND EXECUTE THE FOLLOWING ################

        kubeadm init --pod-network-cidr=10.244.0.0/16 --cri-socket=unix:///var/run/cri-dockerd.sock

############## TO START USING YOUR CLUSTER, YOU NEED TO RUN THE FOLLOWING AS A REGULAR USER --> $ ################


        mkdir -p $HOME/.kube
        sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
        sudo chown $(id -u):$(id -g) $HOME/.kube/config

######### FOR K8S NETWORKING THE REFERENCE SPECIFICATION IS CNI. THERE ARE MANY VENDORS WHO IMPLIMENT THIS. WE ARE GOING TO USE FLANNEL ###################

        kubectl apply -f https://raw.githubusercontent.com/flannel-io/flannel/v0.20.2/Documentation/kube-flannel.yml

############ KUBECTL AUTOCOMPLETE #########

        source <(kubectl completion bash)
        echo "source <(kubectl completion bash)

------------------------------------------------------------------------THE END--------------------------------------------------------------

        